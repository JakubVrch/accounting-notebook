import type { NextPage } from "next";
import Head from "next/head";
import { Controller, useForm, Control } from "react-hook-form";
import { DesktopDatePicker } from "@mui/x-date-pickers/DesktopDatePicker";
import TextField from "@mui/material/TextField";
import React, { useState } from "react";
import Button from "@mui/material/Button";

//TODO: Debug (set value of date as today - in case it is not changed)
//TODO: Add array support
//TODO:

const New: NextPage = () => {
  const {
    register,
    handleSubmit,
    watch,
    control,
    formState: { errors },
  } = useForm({ defaultValues: { date: new Date() } });
  const onSubmit = (data) => console.log(data);
  return (
    <div>
      <Head>
        <title>New</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={handleSubmit(onSubmit)}>
        {ControlledDatePicker(control)}
        <br />
        <TextField
          label="Note"
          placeholder="Note"
          multiline
          variant="standard"
          {...register("note")}
        />
        <hr />
        <TextField
          label="Account"
          placeholder="Account"
          variant="standard"
          {...register("account")}
        />
        <TextField
          label="Line note"
          placeholder="Line note"
          multiline
          variant="standard"
          {...register("note-line")}
        />
        <TextField
          label="Amount"
          placeholder="Amount"
          variant="standard"
          {...register("amount")}
        />
        <Button type="submit" variant="outlined">
          Submit
        </Button>
      </form>
    </div>
  );
};

export default New;

function ControlledDatePicker(control: Control) {
  return (
    <Controller
      name="date"
      control={control}
      render={({ field: { onChange, value } }) => (
        <DesktopDatePicker
          label="Date"
          inputFormat="yyyy-MM-dd"
          value={value}
          onChange={(event) => {
            onChange(event);
          }}
          renderInput={(params) => <TextField {...params} variant="standard" />}
        />
      )}
    />
  );
}
